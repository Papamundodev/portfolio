{"version":3,"file":"main.js","sources":["../../src/js/color-ratio.js","../../src/js/main.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", () => {\n  // Theme light/dark toggle event listener to update the contrast ratio\n  const themeToggle = document.getElementById(\"tld-theme-toggle\");\n  themeToggle.addEventListener(\"click\", () => {\n    updateContrastRatio();\n  });\n  // Initial contrast calculation // keep only in development\n  updateContrastRatio();\n  //end of the page\n});\n\nfunction updateContrastRatio() {\n  const cards = document.querySelectorAll(\".element-ratio-calculating\");\n  cards.forEach((card) => {\n    const textColors = card.querySelectorAll(\".text-color\");\n    const bg = getComputedColor(card, \"background-color\");\n    const bgComputed = card.querySelector(\".bg-color-computed\");\n    if (bgComputed) {\n      bgComputed.textContent = bg;\n    }\n    textColors.forEach((text) => {\n      const color = getComputedColor(text, \"color\");\n      const colorComputed = text.querySelector(\".color-computed\");\n      if (colorComputed) {\n        colorComputed.textContent = color;\n      }\n      const ratio = getContrastRatio(bg, color);\n      const ratioFormatted = ratio.toFixed(2);\n      const ratioComputed = text.querySelector(\".ratio\");\n      if (ratioComputed) {\n        ratioComputed.textContent = `${ratioFormatted}:1`;\n      }\n    });\n  });\n}\n\n// Fonction pour calculer le ratio de contraste\nfunction getContrastRatio(color1, color2) {\n  let rgb1 = {\n    r: parseInt(color1.slice(1, 3), 16),\n    g: parseInt(color1.slice(3, 5), 16),\n    b: parseInt(color1.slice(5, 7), 16),\n  };\n\n  let rgb2 = {\n    r: parseInt(color2.slice(1, 3), 16),\n    g: parseInt(color2.slice(3, 5), 16),\n    b: parseInt(color2.slice(5, 7), 16),\n  };\n\n  let l1 = getLuminance(rgb1.r, rgb1.g, rgb1.b);\n  let l2 = getLuminance(rgb2.r, rgb2.g, rgb2.b);\n\n  let lighter = Math.max(l1, l2);\n  let darker = Math.min(l1, l2);\n\n  return (lighter + 0.05) / (darker + 0.05);\n}\n\n// Fonction pour obtenir la couleur calculÃ©e\nfunction getComputedColor(element, property) {\n  const style = window.getComputedStyle(element);\n  const color = style.getPropertyValue(property);\n\n  if (color.startsWith(\"color(srgb\")) {\n    const [r, g, b] = color\n      .match(/[\\d.]+/g)\n      .map(Number)\n      .map((x) => Math.round(x * 255));\n\n    return (\n      \"#\" +\n      [r, g, b]\n        .map((x) => {\n          const hex = x.toString(16);\n          return hex.length === 1 ? \"0\" + hex : hex;\n        })\n        .join(\"\")\n    );\n  }\n\n  if (color.startsWith(\"rgb\")) {\n    const [r, g, b] = color\n      .match(/[\\d.]+/g)\n      .map(Number)\n      .map(Math.round);\n\n    return (\n      \"#\" +\n      [r, g, b]\n        .map((x) => {\n          const hex = x.toString(16);\n          return hex.length === 1 ? \"0\" + hex : hex;\n        })\n        .join(\"\")\n    );\n  }\n\n  return color;\n}\n\nfunction getLuminance(r, g, b) {\n  let [rs, gs, bs] = [r, g, b].map((c) => {\n    c = c / 255;\n    return c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  });\n\n  return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\n}\n\n// Export functions\nexport {\n  updateContrastRatio,\n  getContrastRatio,\n  getComputedColor,\n  getLuminance,\n};\n","import { updateContrastRatio } from \"./color-ratio\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // Initialize color ratio calculations\n  updateContrastRatio();\n});\n"],"names":[],"mappings":"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"}