@use "flex" as *;
@use "container-wrapper" as *;
@use "../design-tokens" as *;

@mixin grid-table-2-columns {
  // mobile
  @include flex-column-center($spacer-md);
  border-block-end: $border-size solid $gray-color;
  padding-block: $spacer-md;
  // responsive
  @media (width >= $breakpoint-sm) {
    display: grid;
    grid-template-columns: minmax(150px, auto) 1fr;
    & > *:not(:first-child) {
      align-self: center;
      justify-self: center;
    }
  }
}

@mixin grid-col-3 {
  //mobile
  .flex-auto {
    @include flex-column-center($spacer-md);
    & > * {
      width: 100%;
      @content;
    }
  }
  // responsive
  @each $key, $value in $breakpoints {
    @media (width >= $value) and (width <= $breakpoint-xxl) and (width >= $breakpoint-md) {
      .flex-auto {
        width: calc($value - $spacer-lg - ($border-padding-inline));
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: $spacer-md;
        & > * {
          @content;
        }
      }
    }
  }
  // desktop
  @media (width >= $breakpoint-xxl) {
    .flex-auto {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
      gap: $spacer-md;
      width: calc(1200px - ($border-padding-inline));
      & > * {
        @content;
      }
    }
  }
}
